{
  "compilerOptions" : {
    /* Visite https://aka.ms/tsconfig para ler mais sobre este arquivo */

    /* Projetos */
    // "incremental": true, /* Salva os arquivos .tsbuildinfo para permitir a compilação incremental de projetos. */
    // "composite": true, /* Habilita restrições que permitem que um projeto TypeScript seja usado com referências de projeto. */
    // "tsBuildInfoFile": "./.tsbuildinfo", /* Especifique o caminho para o arquivo de compilação incremental .tsbuildinfo. */
    // "disableSourceOfProjectReferenceRedirect": true, /* Desativa a preferência de arquivos de origem em vez de arquivos de declaração ao fazer referência a projetos compostos. */
    // "disableSolutionSearching": true, /* Desativar um projeto da verificação de referência de vários projetos durante a edição. */
    // "disableReferencedProjectLoad": true, /* Reduz o número de projetos carregados automaticamente pelo TypeScript. */

    /* Idioma e ambiente */
    "target" : "es2016" ,                                   /* Defina a versão da linguagem JavaScript para JavaScript emitido e inclua declarações de biblioteca compatíveis. */
    // "lib": [], /* Especifique um conjunto de arquivos de declaração de biblioteca empacotados que descrevem o ambiente de tempo de execução de destino. */
    // "jsx": "preserve", /* Especifica qual código JSX é gerado. */
    // "experimentalDecorators": true, /* Habilita o suporte experimental para decoradores de rascunho do estágio 2 do TC39. */
    // "emitDecoratorMetadata": true, /* Emite metadados do tipo design para declarações decoradas em arquivos de origem. */
    // "jsxFactory": "", /* Especifica a função de fábrica JSX usada ao direcionar a emissão do React JSX, por exemplo, 'React.createElement' ou 'h'. */
    // "jsxFragmentFactory": "", /* Especifique a referência de Fragmento JSX usada para fragmentos ao direcionar a emissão React JSX, por exemplo, 'React.Fragment' ou 'Fragment'. */
    // "jsxImportSource": "", /* Especifica o especificador de módulo usado para importar as funções de fábrica JSX ao usar 'jsx: react-jsx*'. */
    // "reactNamespace": "", /* Especifica o objeto invocado para 'createElement'. Isso só se aplica ao direcionar a emissão JSX 'reagir'. */
    // "noLib": true, /* Desativa incluindo qualquer arquivo de biblioteca, incluindo o padrão lib.d.ts. */
    // "useDefineForClassFields": true, /* Emite campos de classe compatíveis com o padrão ECMAScript. */
    // "moduleDetection": "auto", /* Controla qual método é usado para detectar arquivos JS no formato de módulo. */

    /* Módulos */
    "module" : "commonjs" ,                                 /* Especifica qual código de módulo é gerado. */
    "rootDir" : "./src" ,                                   /* Especifique a pasta raiz em seus arquivos de origem. */
    // "moduleResolution": "node", /* Especifica como o TypeScript procura um arquivo de um determinado especificador de módulo. */
    // "baseUrl": "./", /* Especifique o diretório base para resolver nomes de módulos não relativos. */
    // "paths": {}, /* Especifica um conjunto de entradas que mapeiam novamente as importações para locais de pesquisa adicionais. */
    // "rootDirs": [], /* Permite que várias pastas sejam tratadas como uma ao resolver módulos. */
    // "typeRoots": [], /* Especifique várias pastas que agem como './node_modules/@types'. */
    // "types": [], /* Especifique os nomes dos pacotes de tipo a serem incluídos sem serem referenciados em um arquivo de origem. */
    // "allowUmdGlobalAccess": true, /* Permite acessar globais UMD de módulos. */
    // "moduleSuffixes": [], /* Lista de sufixos de nome de arquivo para pesquisar ao resolver um módulo. */
    // "resolveJsonModule": true, /* Habilita a importação de arquivos .json. */
    // "noResolve": true, /* Não permite que 'import's, 'require's ou '<reference>'s expandam o número de arquivos que o TypeScript deve adicionar a um projeto. */

    /* Suporte a JavaScript */
    // "allowJs": true, /* Permitir que arquivos JavaScript façam parte do seu programa. Use a opção 'checkJS' para obter erros desses arquivos. */
    // "checkJs": true, /* Habilita o relatório de erros em arquivos JavaScript com verificação de tipo. */
    // "maxNodeModuleJsDepth": 1, /* Especifica a profundidade máxima da pasta usada para verificar arquivos JavaScript de 'node_modules'. Aplicável apenas com 'allowJs'. */

    /* Emitir */
    // "declaration": true, /* Gera arquivos .d.ts de arquivos TypeScript e JavaScript em seu projeto. */
    // "declarationMap": true, /* Cria mapas de origem para arquivos d.ts. */
    // "emitDeclarationOnly": true, /* Gera somente arquivos d.ts e não arquivos JavaScript. */
    // "sourceMap": true, /* Cria arquivos de mapa de origem para arquivos JavaScript emitidos. */
    // "outFile": "./", /* Especifica um arquivo que agrupa todas as saídas em um arquivo JavaScript. Se 'declaration' for true, também designará um arquivo que agrupa todas as saídas .d.ts. */
    "outDir" : "./dist/js/" ,                                    /* Especifique uma pasta de saída para todos os arquivos emitidos. */
    // "removeComments": true, /* Desativa a emissão de comentários. */
    // "noEmit": true, /* Desabilita a emissão de arquivos de uma compilação. */
    // "importHelpers": true, /* Permite importar funções auxiliares de tslib uma vez por projeto, em vez de incluí-las por arquivo. */
    // "importsNotUsedAsValues": "remove", /* Especifica o comportamento de emissão/verificação para importações que são usadas apenas para tipos. */
    // "downlevelIteration": true, /* Emite JavaScript mais compatível, mas detalhado e com menos desempenho para iteração. */
    // "sourceRoot": "", /* Especifique o caminho raiz para os depuradores localizarem o código-fonte de referência. */
    // "mapRoot": "", /* Especifique o local onde o depurador deve localizar os arquivos de mapa em vez dos locais gerados. */
    // "inlineSourceMap": true, /* Inclui arquivos sourcemap dentro do JavaScript emitido. */
    // "inlineSources": true, /* Inclui código-fonte nos mapas de origem dentro do JavaScript emitido. */
    // "emitBOM": true, /* Emite uma Byte Order Mark (BOM) UTF-8 no início dos arquivos de saída. */
    // "newLine": "crlf", /* Configura o caractere de nova linha para emissão de arquivos. */
    // "stripInternal": true, /* Desabilita a emissão de declarações que possuem '@internal' em seus comentários JSDoc. */
    // "noEmitHelpers": true, /* Desativa a geração de funções auxiliares personalizadas como '__extends' na saída compilada. */
    // "noEmitOnError": true, /* Desativa a emissão de arquivos se algum erro de verificação de tipo for relatado. */
    // "preserveConstEnums": true, /* Desativa o apagamento de declarações 'const enum' no código gerado. */
    // "declarationDir": "./", /* Especifique o diretório de saída para os arquivos de declaração gerados. */
    // "preserveValueImports": true, /* Preserva valores importados não utilizados na saída JavaScript que, de outra forma, seriam removidos. */

    /* Restrições de interoperabilidade */
    // "isolatedModules": true, /* Garante que cada arquivo possa ser transpilado com segurança sem depender de outras importações. */
    // "allowSyntheticDefaultImports": true, /* Permitir 'importar x de y' quando um módulo não tiver uma exportação padrão. */
    "esModuleInterop" : true ,                              /* Emite JavaScript adicional para facilitar o suporte à importação de módulos CommonJS. Isso habilita 'allowSyntheticDefaultImports' para compatibilidade de tipo. */
    // "preserveSymlinks": true, /* Desativa a resolução de links simbólicos para seu caminho real. Isso se correlaciona com o mesmo sinalizador em node. */
    "forceConsistentCasingInFileNames" : true ,             /* Certifique-se de que o uso de maiúsculas e minúsculas esteja correto nas importações. */

    /* Verificação de tipo */
    "strict" : true ,                                       /* Habilita todas as opções de verificação de tipo estrita. */
    // "noImplicitAny": true, /* Habilita o relatório de erros para expressões e declarações com um tipo 'any' implícito. */
    // "strictNullChecks": true, /* Ao verificar o tipo, leve em consideração 'null' e 'undefined'. */
    // "strictFunctionTypes": true, /* Ao atribuir funções, verifique se os parâmetros e os valores de retorno são compatíveis com o subtipo. */
    // "strictBindCallApply": true, /* Verifique se os argumentos para os métodos 'bind', 'call' e 'apply' correspondem à função original. */
    // "strictPropertyInitialization": true, /* Verifica as propriedades de classe que são declaradas, mas não definidas no construtor. */
    // "noImplicitThis": true, /* Habilita o relatório de erros quando 'this' recebe o tipo 'any'. */
    // "useUnknownInCatchVariables": true, /* Variáveis ​​de cláusula catch padrão como 'unknown' em vez de 'any'. */
    // "alwaysStrict": true, /* Certifique-se de que 'use strict' seja sempre emitido. */
    // "noUnusedLocals": true, /* Habilita o relatório de erros quando as variáveis ​​locais não são lidas. */
    // "noUnusedParameters": true, /* Gera um erro quando um parâmetro de função não é lido. */
    // "exactOptionalPropertyTypes": true, /* Interpreta os tipos de propriedade opcionais conforme escrito, em vez de adicionar 'undefined'. */
    // "noImplicitReturns": true, /* Habilita o relatório de erros para caminhos de código que não retornam explicitamente em uma função. */
    // "noFallthroughCasesInSwitch": true, /* Habilita o relatório de erros para casos de fallthrough em instruções switch. */
    // "noUncheckedIndexedAccess": true, /* Adiciona 'undefined' a um tipo quando acessado usando um índice. */
    // "noImplicitOverride": true, /* Certifique-se de que os membros de substituição em classes derivadas sejam marcados com um modificador de substituição. */
    // "noPropertyAccessFromIndexSignature": true, /* Impõe o uso de acessadores indexados para chaves declaradas usando um tipo indexado. */
    // "allowUnusedLabels": true, /* Desativa o relatório de erros para rótulos não utilizados. */
    // "allowUnreachableCode": true, /* Desativa o relatório de erros para código inacessível. */

    /* Completude */
    // "skipDefaultLibCheck": true, /* Ignora a verificação de tipo de arquivos .d.ts incluídos no TypeScript. */
    "skipLibCheck" : true                                  /* Ignora a verificação do tipo de todos os arquivos .d.ts. */
  }
}